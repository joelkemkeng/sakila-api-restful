services:
  # Service MariaDB (au lieu de MySQL)
  dbms:
    image: mariadb:latest
    container_name: sakila-mariadb
    restart: always
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: sakila
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "no"
      MARIADB_RANDOM_ROOT_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sakila
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      # Scripts d'initialisation dans l'ordre correct - ON ÉVITE L'INIT AUTO
      # - ./src/model/schema/00-reset-root-password.sql:/docker-entrypoint-initdb.d/00-reset-root-password.sql
      # - ./src/model/schema/00-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      # - ./src/model/schema/01-schema.sql:/docker-entrypoint-initdb.d/02-schema.sql
      # - ./src/model/schema/02-data.sql:/docker-entrypoint-initdb.d/03-data.sql
      # - ./src/model/schema/00-fix-inventory.sql:/docker-entrypoint-initdb.d/04-fix-inventory.sql
      # - ./src/dbms/01_create_user_file_table.sql:/docker-entrypoint-initdb.d/05-user-files.sql
      # - ./src/model/schema/grant-privileges.sql:/docker-entrypoint-initdb.d/99-grant-privileges.sql
    command: [
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--innodb-buffer-pool-size=256M",
      "--max-connections=100"
    ]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 30s
    networks:
      - sakila-network

  # Service API
  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: sakila-api
    environment:
      NODE_ENV: development
      DB_HOST: dbms
      DB_USER: root
      DB_PASSWORD: root
      DB_DATABASE: sakila
      PORT: 5050
      JWT_SECRET: your-secure-jwt-secret-key
    ports:
      - "5050:5050"
    depends_on:
      dbms:
        condition: service_healthy
    networks:
      - sakila-network
    volumes:
      - ./:/app
      - /app/node_modules
      - tsoa-cache:/app/src/routes
    restart: on-failure:3
    # Augmentation des ressources pour TSOA
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Service VS Code pour le développement compatible avec l'extension Remote Containers
  vscode_api:
    image: rg.fr-par.scw.cloud/api-code-samples-vscode/vscode_api:2.0.1
    container_name: sakila-vscode
    command: /bin/bash -c "while sleep 1000; do :; done"
    working_dir: /home/dev
    volumes:
      - ./:/home/dev:cached
    environment:
      NODE_ENV: development
      DB_HOST: dbms
      DB_USER: root
      DB_PASSWORD: root
      DB_DATABASE: sakila
      PORT: 5050
      JWT_SECRET: your-secure-jwt-secret-key
    depends_on:
      dbms:
        condition: service_healthy
    networks:
      - sakila-network
    labels:
      api_logging: "true"

volumes:
  mysql-data:
    name: sakila-mariadb-data
  tsoa-cache:
    name: sakila-tsoa-cache

networks:
  sakila-network:
    driver: bridge
    name: sakila-network
